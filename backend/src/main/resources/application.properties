spring.application.name=backend
spring.datasource.url=jdbc:postgresql://localhost:5432/Taskflow_db
spring.datasource.username=riian
spring.datasource.password=smarty
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
server.port=8081

# JWT Settings
app.jwt.secret=/eBluI8knWG7wdZ9ai3UpiPlrQujQHn/UGuOnPJeJ4O5+MsZy9WtdxFq5W2hLIHBpgJ/EaisRMXjO/wnz8NMUg==
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000

# =======================================
# OAUTH2 CLIENT CONFIGURATION
# =======================================
spring.security.oauth2.client.registration.github.client-id=Ov23li253fnPykWXer1y
spring.security.oauth2.client.registration.github.client-secret=599699360bb308a21199c9b03885f8b3937952cd
# Explicitly define scopes seen in the URL
spring.security.oauth2.client.registration.github.scope=user:email,read:user
# Explicitly define the redirect URI template (matches the registered callback URL)
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8081/login/oauth2/code/github

# Optional: If you need to specify provider details explicitly (often auto-configured)
# spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
# spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
# spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
# spring.security.oauth2.client.provider.github.user-name-attribute=login

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:5173
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true